<vm-class>
    <vm-function>
        <command>function</command>
        <label>SquareGame.new</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.alloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>30</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.new</label>
        <number>3</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>SquareGame.dispose</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.dispose</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.deAlloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>SquareGame.run</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END1</label>
    </vm-jump>
    <vm-function>
        <command>call</command>
        <label>Keyboard.keyPressed</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>SquareGame.moveSquare</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>81</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>90</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.decSize</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>88</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.incSize</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>131</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>133</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE4</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE4</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE4</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE4</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>130</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE5</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE5</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE5</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE5</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>132</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE6</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE6</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE6</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE6</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END2</label>
    </vm-jump>
    <vm-function>
        <command>call</command>
        <label>Keyboard.keyPressed</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>SquareGame.moveSquare</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>SquareGame.moveSquare</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.moveUp</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.moveDown</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.moveLeft</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Square.moveRight</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>5</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Sys.wait</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
</vm-class>
