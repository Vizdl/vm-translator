<vm-class>
    <vm-function>
        <command>function</command>
        <label>Bat.new</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>5</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.alloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.show</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.dispose</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.deAlloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.show</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.draw</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.hide</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.draw</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.draw</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.setDirection</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.getLeft</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.getRight</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.setWidth</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.hide</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.show</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>Bat.move</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>lt</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>IF_END0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>511</offset>
    </vm-stack>
    <vm-operator>
        <command>gt</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>511</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.setColor</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_END0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
</vm-class>
