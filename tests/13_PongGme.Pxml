<vm-class>
    <vm-function>
        <command>function</command>
        <label>PongGame.new</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>7</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.alloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Screen.clearScreen</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>50</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>6</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>230</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>229</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>6</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>7</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.new</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>253</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>222</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>511</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>229</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.new</label>
        <number>6</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>400</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.setDestination</label>
        <number>3</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>238</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>511</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>240</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Screen.drawRectangle</label>
        <number>4</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>22</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Output.moveCursor</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>8</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.new</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>83</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>99</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>111</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>114</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>101</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>58</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>32</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>48</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-function>
        <command>call</command>
        <label>Output.printString</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>5</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>PongGame.dispose</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.dispose</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.dispose</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Memory.deAlloc</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>PongGame.newInstance</label>
        <number>0</number>
    </vm-function>
    <vm-function>
        <command>call</command>
        <label>PongGame.new</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>static</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>PongGame.getInstance</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>static</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>PongGame.run</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>and</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END1</label>
    </vm-jump>
    <vm-function>
        <command>call</command>
        <label>Keyboard.keyPressed</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.move</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>PongGame.moveBall</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>130</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.setDirection</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>IF_END0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>132</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.setDirection</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>IF_END1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>140</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_END1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_END0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_EXP2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>and</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>WHILE_END2</label>
    </vm-jump>
    <vm-function>
        <command>call</command>
        <label>Keyboard.keyPressed</label>
        <number>0</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.move</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>PongGame.moveBall</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>WHILE_EXP0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>WHILE_END0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>10</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>27</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Output.moveCursor</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>9</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.new</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>71</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>97</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>109</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>101</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>32</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>79</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>118</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>101</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>114</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>String.appendChar</label>
        <number>2</number>
    </vm-function>
    <vm-function>
        <command>call</command>
        <label>Output.printString</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
    <vm-function>
        <command>function</command>
        <label>PongGame.moveBall</label>
        <number>5</number>
    </vm-function>
    <vm-stack>
        <command>push</command>
        <segment>argument</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>pointer</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.move</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>gt</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>5</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-operator>
        <command>and</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>5</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.getLeft</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.getRight</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.getLeft</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.getRight</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>eq</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-operator>
        <command>gt</command>
    </vm-operator>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>lt</command>
    </vm-operator>
    <vm-operator>
        <command>or</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-operator>
        <command>not</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE2</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>10</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-operator>
        <command>lt</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>neg</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>goto</command>
        <label>IF_END3</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>3</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>10</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-operator>
        <command>gt</command>
    </vm-operator>
    <vm-jump>
        <command>if-goto</command>
        <label>IF_TRUE4</label>
    </vm-jump>
    <vm-jump>
        <command>goto</command>
        <label>IF_FALSE4</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_TRUE4</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>pop</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE4</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_END3</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>6</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>2</offset>
    </vm-stack>
    <vm-operator>
        <command>sub</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>6</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>6</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Bat.setWidth</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-operator>
        <command>add</command>
    </vm-operator>
    <vm-stack>
        <command>pop</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>22</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>7</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Output.moveCursor</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>4</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Output.printInt</label>
        <number>1</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE2</label>
    </vm-jump>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE1</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>this</segment>
        <offset>1</offset>
    </vm-stack>
    <vm-stack>
        <command>push</command>
        <segment>local</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-function>
        <command>call</command>
        <label>Ball.bounce</label>
        <number>2</number>
    </vm-function>
    <vm-stack>
        <command>pop</command>
        <segment>temp</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-jump>
        <command>label</command>
        <label>IF_FALSE0</label>
    </vm-jump>
    <vm-stack>
        <command>push</command>
        <segment>constant</segment>
        <offset>0</offset>
    </vm-stack>
    <vm-operator>
        <command>return</command>
    </vm-operator>
</vm-class>
